
general {
    host = "0.0.0.0"
    port = 8080
}

requestLimit {
    hosts = [
        "localhost"
        "eridani.club"
    ]

    scheme = "https"
}

database {
    host = "localhost"
    port = "1234"
    dbName = "postgres"
    account {
        user = "test"
        password = "123456"
    }
}

smtp {
    host = "mail.eridani.club"
    port = "553"

    email = "no-reply@eridani.club"
    password = "yourPassword"
}

cloudflare {
    apiKey = "yourApiKey"

    ddos {
        newIP {
            provider = "alibaba"
        }
    }

    cc {
        antiProxy {
            enable = true
            provider = [
                "proxyscrape"
                "dailiproxy"
                "zyte"
                "free-proxy"
                "proxybox"
            ]
        }
    }
}

alibaba {

    apiKey = "yourApiKey"

    web {
        analysis = true
        status {
            monitor = true
        }
    }

    security {
        detection {
            password {
                duplicate = true
                leak = true
            }


            ip {
                leak = true
                ddos {
                    autoBlackHole = true
                    max = "500G"
                    tryIPV6 = true

                    //Sometime both of smallshen is sleeping
                    requireEmailConfrim = false

                    newIp {
                        enable = true

                        provider = "cloudflare"

                        rule {
                            region = "CA"
                            sameDedicate = true
                            router = "default-resource"
                        }
                    }
                }

                scan {
                    enable = true
                    fakeCode = 11205
                }
            }
        }
        prevent {
            maxDataOutput = "200G"
        }
    }

    contentFilter {
        text {
            enable = true
            politic = true
            sexual = false
            badWords = true
            ads = true
            meaningless = true
            spam = true
            violent = true
        }
    }

}

antiLeak {

    provider = [
        "tencent"
        "discord"
        "alibaba"
        "huawei"
        "google-drive"
        "discord"
        "discord-nitro"
        "baidu"
        "tianyi"
    ]

    sourceCode {
        github {
            forceKey = true
            guessKey = true

            privateRepo {
                forceGitInfo = true
                bypassKey = true
            }

        }

        gitlab {
            scan = true
            provider = [
                "wish"
            ]
        }

        sensitiveChat {
            provider = [
                "tencent"
                "discord"
            ]
        }
    }

    jar {
        libExcluder {
            searchMaven = true
            sourceMap = true
        }

        deobf {
            zkm {
                all = true
                useNewInvokeDynamicAnalyzer = true
            }

            eskid {
                all = true
                checkSum = true
            }

            paramorphism {
                all = true
            }

            binsecure {
                all = true
                experimental {
                    runTimeStringDump = true
                    flowRemover {
                        enable = true
                        preferDefaults = true
                    }
                }
            }

            dasho {
                all = true
            }

            stringer {
                all = true
            }

        }

        nativeDeobf {

            no32 = true

            winLicenseRemover = true
            // thanks to russian hackers, this will automaticlly use for Themida V 3.1 when found
            themidaEntryAddressFinder = true
            getHandleHook = true
            // samething used by gamesense crack (maybe?
            vmpDump = true

            jniDef = "typedef jint ( JNICALL *fnJNI_GetCreatedJavaVMs )(JavaVM **, jsize, jsize *);"

            scanJNIExport = true
            checkJNIOnLoad = true

            general {
                jniFinder = true
                jniDump {
                    enable = true
                    privider = [
                        "intelliJ"
                        "kalux"
                        "oracle"
                    ]
                }
            }

            jnic {
                all = true
                adaptZkmStringObf = true
            }

            soter {
                headerDump = true
                innerLayer = true
                checkAnotation = true
                experimental {
                    innerLayerRemover = true
                    checkHasLambda = true
                }
            }

            masxinlingvonta {
                jniHook = true
                getHandleHook = true
            }

        }

        minecraft {
            mcp = true
            yarn = true
            asm9 = true

            applyAutoCrack {
                loaderHWIDDump = true
                falconForge = true
            }
        }

    }

}